name: Generate firmware Doxygen

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install prerequisite software
      run: |
        sudo cp /etc/apt/sources.list /etc/apt/sources.list.d/ubuntu-latest-mirrors.list
        sudo sed 's#http://azure.archive.ubuntu.com/ubuntu/#http://ubuntu.osuosl.org/ubuntu/#' -i /etc/apt/sources.list.d/ubuntu-latest-mirrors.list
        cat /etc/apt/sources.list | sudo tee -a /etc/apt/sources.list.d/ubuntu-latest-mirrors.list > /dev/null
        sudo sed 's#http://azure.archive.ubuntu.com/ubuntu/#http://mirrors.ocf.berkeley.edu/ubuntu/#' -i /etc/apt/sources.list.d/ubuntu-latest-mirrors.list
        sudo apt-get -o Acquire::Retries=3 update
        sudo apt-get install doxygen graphviz sshpass

    - name: Set FTP variables
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        if [ "${{github.ref}}" = "refs/heads/master" ]; then
          echo "::set-env name=RUSEFI_SSH_SERVER::${{secrets.RUSEFI_SSH_SERVER}}";
          echo "::set-env name=RUSEFI_SSH_USER::${{secrets.RUSEFI_SSH_USER}}";
          echo "::set-env name=RUSEFI_SSH_PASS::${{secrets.RUSEFI_SSH_PASS}}";
        fi

    - name: Generate documentation
      run: bash ./misc/jenkins/generate_doxygen/gen_upload_docs.sh
