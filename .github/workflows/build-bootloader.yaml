name: Bootloader CI

on: [push,pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
  
    # Build machines don't have arm-none-eabi gcc, so let's download it and put it on the path
    - name: Download & Install GCC
      run: | # Compiler hosted on our other git repo - avoids having to download from the nice folks at ARM every time
        wget 'https://github.com/rusefi/build_support/raw/master/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.xz' -O compiler.tar.xz
        tar -xvf compiler.tar.xz
        echo "::add-path::`pwd`/gcc-arm-none-eabi-9-2019-q4-major/bin"
  
    # Make sure the compiler we just downloaded works - just print out the version
    - name: Test Compiler
      run: arm-none-eabi-gcc -v
  
    # Build the bootloader!
    - name: Build Bootloader
      working-directory: ./firmware/bootloader/
      run: make -j4 -f src/Makefile EXTRA_PARAMS="-DEFI_BOOTLOADER -DSTM32F405xx -DEFI_ENABLE_ASSERTS=FALSE -DCH_DBG_ENABLE_CHECKS=FALSE -DCH_DBG_ENABLE_ASSERTS=FALSE -DCH_DBG_ENABLE_STACK_CHECK=FALSE -DCH_DBG_FILL_THREADS=FALSE -DBOARD_TLE8888_COUNT=0 -DBOARD_TLE6240_COUNT=0 -DBOARD_MC33972_COUNT=0"
